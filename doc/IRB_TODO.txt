
 * gabien-app-r48 - Editing program for various formats
 * Written starting in 2016 by contributors (see CREDITS.txt)
 * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.
 * A copy of the Unlicense should have been supplied as COPYING.txt in this repository. Alternatively, you can find it at <https://unlicense.org/>.

GOAL 1, PREPARATION
"+windowTitleAttachment "(vm (fl2 (fmt-at a0 @name)))" is kinda bad, what do?
1. CONTEXTUALIZE. if the caller knows we're an fl2, why doesn't the dyn-tr-compiler?
   +windowTitleAttachment "(vm (fmt-at a0 @name))"
2. SYNTAX. any case doing this is going to know we want a () around the list
   +windowTitleAttachment "vm (fmt-at a0 @name)"
3. RECURSIVE SPECIAL FORM-HEAVY SYNTAX. dyn-tr-compiler knows we're an fl2, so it can build the lambda (outer shell).
   better yet, why not just assume a0 always contains the thing of interest?
   because of command names? add more dyn-tr-compiler modes!
   (dyn-tr-compiler V ARGS FOCUS)
   ARGS: (v index)
   FOCUS: v
   +windowTitleAttachment "(@ @name)"
   elements:
   "(@ PATH [INTERP [PREFIX]])" is fmt-at but without needing to specify which object
   "(? PATH [TRUE [FALSE]])" checks for existence
   "(= PATH [VAL RES]... DEF)" uses dm-decode to do non-string-based comparison between a path and fixed values similar to our old friend the inline disambiguator
   "(vm EXPR)" is the "I know this is getting too complicated" operator
   "(with X Y)" is used to "focus" on other args
   "(call PATH RID)" calls a name routine
   (actually, can DynTrSlots ALSO be MVMFns? functions of any argcount translatable = good, and it "incentivizes" folding nameroutines into DynTrSlots as closely as possible)
   strings: are strings
   lists: if a list element starts with a list or string, autoconcatenation, otherwise see above
   +windowTitleAttachment "(@ @name)"
   "\"Do Something With Range \" (vm (rcmd-range ]1 ]2))" <- yes this is stupidly double-escaped. why? well basically, uh... SDB parser sucks?
   can I do something about that re: '
   look, none of the code was using `, it's perfectly fine if I just, you know, use it as another kind of string quote, riiiiight?
   stupid question, but, why not just *prefix all the symbols and define them in the actual namespace???*
   "but you can't lookup arbitrary slots in the scheme namespace" just eval it
   `"Do Something With Range " (rcmd-range ]1 ]2)` looook it's magic, just please for the love of kittens hope ` never comes up because this SDB token variant won't have escaping

GOAL 1. The Biggest Problem With R48, Part 1
 this is all just theory right now
+ Name routines are "pure formatsyntax" as opposed to the messy magical knows-all-schemas-in-advance kind. Can this preknowledge be utilized to recompile them?
+ Look into trying to precompile formatsyntax, not to stabilize it like with pathsyntax, but to find a way to check, auto-translate, etc. it.
  This can be used to start deprecating FormatSyntax features in favour of passing off these cases to MVM.
+ Implement a 2-parameter name routine for the sole purpose of porting old command ranges.
  If everything's forced onto Extended FormatSyntax, that avoids needing a temp prefix for the new MVM command names.

GOAL 2. The Biggest Problem With R48, Part 2
+ Introduce a fancy new prefix for CMDB command names for them to be run on MiniVM.
+ Successfully port every CMDB command name.
+ Drop support for unported command names.
+ Remove the prefix and error if the prefix is received.
+ Successfully de-prefix every CMDB command name.
+ Rather than loading FormatSyntax into MVM slots, do things the sensible way instead.

-- DELAYED --

honestly all of this stuff is eternally delayed

+ Map looping support
 (ok tbh this is probably not happening
  and if it was happening, it'd probably be tiles only)
+ Helpfile rewrite

+ Demetrius's various notes over IRC and such:
 + Nicer pattern-tiling map editing similar to the way paste works in the image editor
 + Image editor palette cleanup ( #51 )
 + Character creator??? [in progress]

+ OSLoc mode improvements, perhaps?
  nope, just nope, just nope, just nope.

+ Documentation
 + SDB Further Documentation Project ???
  + Should create a useful index to help clean up SDB

+ Figure out RXP's oddities(???)

+ send back SavePicture default value fixes, they probably need this (Well, I did mention it, but if anything's happened I don't see it)
 + Check this again on both sides!!!
