
 * gabien-app-r48 - Editing program for various formats
 * Written starting in 2016 by contributors (see CREDITS.txt)
 * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.
 * A copy of the Unlicense should have been supplied as COPYING.txt in this repository. Alternatively, you can find it at <https://unlicense.org/>.


 ---

 Now for an explanation.
 RPG::EventCommand is the 'skeleton' schema element used to build event commands & is used for modifyVal.
 EventCommandEditor_Most is what the user will see if no command is defined.
 There's also a version of the schema entirely generated by the schema system itself used for known commands.

 EventListEditor is responsible for the entire command editing UI.

 Regarding EventCommandParams:
 It's the visual representation of unknown command arguments.
 So it's ESSENTIALLY the Schema-side UI for an arbitrary ParameterArray instance.
 arrayIx1 DOES NOT CARE about element 0, outside of making it nil if it would otherwise be an actual Java null.
 (NOT THAT THIS SHOULD HAPPEN UNDER DM2.)
 Next, ]0 text string will reinitialize it and make sure the first is a string.
 arrayIx1 will ensure the rest are all ints.
 Thus, it should be impossible to generate unserializable data.

 Some advice I left earlier was:
 Advice: HAVE A DEBUGGER HANDY IF YOU ARE WRITING SCHEMA STUFF AND GET A ARRAYELEMENTSCHEMAELEMENT ERROR!!!!

> genericScriptParameter int

 -Event Commands-

.EventCommandParams
]0 text string
+arrayIx1 genericScriptParameter

: RPG::EventCommand
@code int= 12310
@indent int
@parameters EventCommandParams
 SEE SchemaScriptingMonolith FOR DETAILS ABOUT THIS BIT!!!
+optP @move_commands MoveListEditor

.EventCommandEditor_Most
@indent indent
@parameters EventCommandParams

> EventListEditor subwindow arrayCS RPG::EventCommand EventCommandEditor_Most event

 Use the Command Buffer syntax to fix this mess.
 Note that this introduces new and interesting problems, but I claim it's worth it,
  as movecommand_code is used elsewhere(!)

 -Move Commands-

 Used by the move commands to avoid tons of redundant paramspecs

.movecommand_default_nothing
@parameters { ]0 _ string ]1 _ int ]2 _ int ]3 _ int }

: RPG::MoveCommand
@code int
@parameters { ]0 _ string ]1 _ int ]2 _ int ]3 _ int }

> MoveListEditor subwindow: Route... arrayMS RPG::MoveCommand movecommand_default_nothing move
