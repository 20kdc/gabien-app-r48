
 * gabien-app-r48 - Editing program for various formats
 * Written starting in 2016 by contributors (see CREDITS.txt)
 * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to this software to the public domain worldwide. This software is distributed without any warranty.
 * A copy of the Unlicense should have been supplied as COPYING.txt in this repository. Alternatively, you can find it at <https://unlicense.org/>.

 Event commands for VX Ace.

# RCOM/CommonCommands.txt

 LINE 251

101:@@Start Text {A:w/face #A:#B ({C=1=no }bkg, [change_text_options_position]D)|(c.401/102/103/104)}
d Begins a segment of text.
C translatable
p faceName f_face_name
C spritesheet 0 Faces/
p faceIndex int
p backInvisible int_boolean
p position change_text_options_position
C groupBehavior messagebox 401

401: "Tx." ($ " " ]0)
d Continues the text.
C textArg 0
p text string

102:@@Show Choices {A:: [choice_array]A {B=1=(can cancel)}|(c.402/403/404)}
d Show a set of choices to the user, potentially allowing the cancel button.
C translatable
p choices string_array
p cancellable int_boolean
C groupBehavior form 402 "Choice" 403 "Cancelled" 404
I1

 See IRB_CMDB.txt for indentation logic docs, and the 'K command'.

402: "When Choice =" ($ " " ]0)
d When a given choice index is chosen...
p choice int
p textRef string
C groupBehavior expectHead 102 402 403
i-1
I1
K102

403: "When cancelled (idx 4)"
d When choice index 4 (cancel) is chosen...
C groupBehavior expectHead 102 402 403
i-1
I1
K102

404: "End Choice"
d The end of a choice block.
C groupBehavior expectHead 102 402 403
i-1
K102

 LINE 305

103: "Input Number" ($ " to " ]0 var_id)
d Gets a number from the player, and puts it into a variable.
p var var_id
p digits int

104: "Input Item" ($ " to " ]0 var_id)
d Lets the player choose an item... for some reason.
p var var_id

105: "Show Scrolling Text (c.405)"
d Begins some scrolling text.
p speed int
p notFast boolean
C groupBehavior messagebox 405

405: "Scrtx." ($ " " ]0)
d Continue some scrolling text.
C translatable
p text string

 Comments (108/408) in CommonCommands

111:@@Conditional{A::[@conditional_branch_parameters]| Branch (c.411/412)}
d A conditional branch, allowing you to run different code depending on the state of things.
 The parameter exists so the A: detect works
p type conditional_branch_types
C groupBehavior form 411 "Else" 412
X conditional_branch_parameters
I1

411: "Else"
d A conditional branch will go here if the answer is 'false'. Otherwise, this is skipped entirely.
C groupBehavior expectHead 111
i-1
I1
l

412: "End Conditional"
d Ends a conditional branch.
C groupBehavior expectHead 111 411
i-1
l

112: "Start Loop (c.113/413)"
d Begins a loop.
C groupBehavior form 413
 this is a blank 'placeholder' command
I1

113: "Break Loop"
d Leave a loop formed between a Start Loop and End Loop.

413: "End Loop/Repeat Above"
d The end of a loop (goes back to the start)
C groupBehavior expectHead 112
i-1
l

115: "Exit Event Processing"
d Stop running the code in this page.

117: "Call Common Event" ($ " " ]0 commonevent_id)
d Call a Common Event.
p eventId commonevent_id

 They still rely on indent for stuff,
 so this is just as unreliable as before.

118: "Label" ($ " " ]0)
d A label, to be jumped to.
p labelName string

119: "Jump to label" ($ " " ]0)
d Jump to a label. May act odd if it enters/leaves conditional blocks or such.
p labelName string

 121/122/123 (Control Switch/Set Variable/Control Selfswitch) in CommonCommands.

124:@@{A:{A=1=Stop Timer|Start Timer at #B seconds}|Start/Stop Timer}
d Stop or start a timer.
X onoff_timer_parameters

 operate_value has 3 parameters: Negate, const/var (int_boolean), operand (int_or_var)

125:@@Gold{A: += [@operate_value_0]| Add/Remove}
d Give or take gold from the player.
p negate int_boolean
p amountIsVar int_boolean
P 1 amountVar var_id
v 0 amount int_default_100

126:@@Item{A: @[item_id]A += [@operate_value_1]| Add/Remove}
d Give or take items from the player.
p item item_id
p negate int_boolean
p amountIsVar int_boolean
P 2 amountVar var_id
v 0 amount int_default_1

127:@@Weapon{A: @[weapon_id]A += [@operate_value_1]| Add/Remove}
d Give or take weapons from the player.
X weapon_add_remove_parameters

128:@@Armour{A: @[armour_id]A += [@operate_value_1]| Add/Remove}
d Give or take armour from the player.
X armour_add_remove_parameters

129:@@{A:{B=0=Remove actor @[actor_id]A from party|Add actor @[actor_id]A to party{C=0= without} resetting}|Add/remove actor to party}
d Adds or removes a party member from/to the player's party.
p actor actor_id
p add int_boolean
p addInitialize int_boolean

132: "Set Battle BGM" ($ " to " ]0)
d Changes the battle music.
p bgm RPG::BGM

133: "Set Battle End ME" ($ " to " ]0)
d Changes the musical snippet for the end of the battle.
p me RPG::ME

134: "Set Save Accessible" ($ " to " ]0)
d Controls if the player can save or not.
p canSave int_boolean

135: "Set Menu Accessible" ($ " to " ]0)
d Controls if the player can access the menu.
p canMenu int_boolean

136: "Set Encounters" ($ " to " ]0)
d Controls if the player can be encountered by enemies.
p canEncounter int_boolean

137: "Set Formation Accessible" ($ " to " ]0)
d Controls if the player can control their formation.
p canFormation int_boolean

138: "Change Window Colour" ($ " to " ]0)
d Changes the colour of system windows.
p tone Tone

 Why are there *THREE* of these in a row?!??
 (EDIT LATER: At least I've removed the custom schema requirement for two of them.)

201:@@{A:[@transfer_player_paramassist]|Transfer Player}
d Teleports the player to someplace.
p useVariables int_boolean
P 0 mapVar var_id
v 0 map map_id
P 0 xVar var_id
v 0 x int
P 0 yVar var_id
v 0 y int
p playerDir direction_disable
p fadeType transfer_player_fadetype
x transfer_player_paramassist

202:@@{A:[@transfer_vehicle_paramassist]|Transfer Vehicle}
d Teleports a vehicle to someplace.
p vehicle vehicle_id
p useVariables int_boolean
P 1 mapVar var_id
v 0 map map_id
P 1 xVar var_id
v 0 x int
P 1 yVar var_id
v 0 y int

203:@@{A:[@set_event_location_paramassist]|Set Event Location}
d Teleports an event to someplace.
X set_event_location_paramassist

204: "Scroll Map"
d Scrolls the player's view of the map in a specific way.
p dir direction
p length int
p speed int

205: "MoveRoute Set On" ($ " " ]0 character_id)
d Takes control of a character (event or player)'s MoveRoute.
p target character_id
p route RPG::MoveRoute

505: "NOP (MoveRoute Editing Helper)"
d Totally useless outside of the VX Ace editor itself - displays the command.
p command RPG::MoveCommand

206: "Player Gets On/Off Vehicle"
d If the player's character is in the right situation to get on or off a vehicle (standing on airship/facing ship or boat...), the character will do so.

211: "Player Opacity" ($ " to " ]0)
d Controls if the player is completely invisible or not.
p opaque int_boolean

212: "Show" ($ " " ]0 character_id) " Anim." ($ " " ]1 animation_id) " (wait?" ($ " " ]2) ")"
d Shows a battle animation, usually useful for reactions.
p char character_id
p anim animation_id
p wait boolean

213: "Show" ($ " " ]0 character_id) " Balloon." ($ " " ]1 balloon_id) " (wait?" ($ " " ]2) ")"
d Shows a reaction balloon, a feature previously implemented with battle animations.
p char character_id
p b balloon_id
p wait boolean

214: "Temp. Erase This Event"
d Temporarily (until next map load?) erases this event from reality.

216: "Player Followers Inv.?" ($ " " ]0)
d Make characters following the player visible or invisible.
p invisible int_boolean

217: "Gather Followers"
d Presumably, this makes characters following the player 'merge into the player'.

221: "Fadeout Screen"
d And goodbye.

222: "Fadein Screen"
d And hello.

223: "Start Tone Change"
d Because it wouldn't be Autumn without the Instagram filter to make it obvious. (Yes, I know it's not Autumn. That's the point.)
p tone Tone
p time int
p wait boolean

224: "Flash Screen"
d Light up the screen with a temporary burst of colour! Ensure legal liability warnings are posted before use.
p colour Color
p duration int
p wait boolean

225: "Shake Screen"
d Shake things. What more to say?
p power int
p speed int
p duration int
p wait boolean

230: @@Wait{A: #A frames}
d Wait some amount of frames.
p timeFrames int

231: "Set Picture" ($ " " ]0) ($ " to " ]1)
d Create and show a picture on the screen.
p id int
p image f_picture_name
p centred int_boolean
p useVars int_boolean
P 3 xVar var_id
v 0 x int
P 3 yVar var_id
v 0 y int
p scaleX scale
p scaleY scale
p opacity opacity
p blend blend_type

232: "Move Picture" ($ " " ]0)
d Move a previously shown picture around the screen.
p id int
 what on earth
 This is actually NIL.
p _ OPAQUE
p centred int_boolean
p useVars int_boolean
P 3 xVar var_id
v 0 x int
P 3 yVar var_id
v 0 y int
p scaleX scale
p scaleY scale
p opacity opacity
p blend blend_type
p durationFrames int
p wait boolean

233: "Picture" ($ " " ]0) " Rotation Speed" ($ " to " ]1)
d Control the rotation speed of a picture, in half-degrees per frame.
p id int
p speedHDF int

234: "Picture" ($ " " ]0) " Tone Change"
d Change the tone of a picture, just in case you hadn't had enough of those Instagram filters. (What do you mean, this joke is getting old fast)
p id int
p tone Tone
p duration int
p wait boolean

235: "Erase Picture" ($ " " ]0)
d Get rid of a picture.
p id int

236: "Set Weather" ($ " to " ]0 weather_type)
d Change the weather! This explains why it's never right according to the forecasters.
p type weather_type
p power int
p duration int
p wait boolean

241: "Play BGM" ($ " " ]0)
d Immediately play a music track.
p bgm RPG::BGM

242: "Fadeout BGM over" ($ " " ]0) " seconds"
d Fade out the current music track over some amount of time.
p seconds int

243: "Save BGM"
d Note down the current music track so you can play something else without worrying about what you were playing before.

244: "Resume BGM"
d Play the last noted-down music track (see 243)

245: "Play BGS" ($ " " ]0)
d Begin to play a background sound, generally meaning 'streams and environmental stuff'
p bgs RPG::BGS

246: "Fadeout BGS over" ($ " " ]0) " seconds"
d Fade out the background sound over some amount of time, just to help make things silent for The Curb-Stomping.
p seconds int

249: "Play ME" ($ " " ]0)
d Play a... musical effect.
p me RPG::ME

250: "Play SE" ($ " " ]0)
d Play a sound effect.
p se RPG::SE

251: "Stop SE"
d Stop any playing sound effect.

261: "Play Movie" ($ " " ]0)
d Play a movie! (May break for any reason at any time.)
p movie string

281: "Map Name Inv.?" ($ " " ]0)
d Control if the map name is visible or invisible.
p invisible int_boolean

282: "Switch Tileset" ($ " to " ]0)
d Change the current tileset used for the map. I would suggest making sure they are at least reasonably 'compatible' first.
p tileset tileset_id

283: "Switch Battleback" ($ " to " ]0) ($ " " ]1)
d Change the backgrounds used for battle purposes.
p back1 string
p back2 string

284: "Switch Parallax" ($ " to " ]0)
d Change the parallax settings.
p parallax f_parallax_name
p loop_x boolean
p loop_y boolean
p sx int
p sy int

285: "Get Info On Location"
d Note down a specific attribute about a given tile in a variable.
p resultVar var_id
p infoType get_location_info_type
p posVars int_boolean
P 2 xVar var_id
v 0 x int
P 2 yVar var_id
v 0 y int


301: "Start Battle (c.601/602/603/604)"
d Begin a battle.
p type battle_processing_type
P 0 _ int
v 0 troop troop_id
v 1 troopVar var_id
p canEscape boolean
p losingDoesNotGameover boolean

601: "Battle Result Branches Start: If Win"
d This is the beginning of the optional result branches section for a Start Battle (301), should be immediately below it, and contains the win code.
C groupBehavior expectHead 301
C groupBehavior expectTail 602 603 604
C template 602 603 604
I1

602: "Battle Result Branch: If Escape"
d This contains the escape code. See 'canEscape' in the relevant Start Battle.
C groupBehavior expectHead 301 601
C groupBehavior expectTail 603 604
i-1
I1

603: "Battle Result Branch: If Lose"
d This contains the lose code. See 'losingDoesNotGameover' in the relevant Start Battle.
C groupBehavior expectHead 301 601 602
C groupBehavior expectTail 604
i-1
I1

604: "Battle Result Branches End"
d Ends the Battle Result Branches.
C groupBehavior expectHead 301 601 602 603
i-1

302: "Shop Processing (c.605)"
d The start of a shop. This describes a single item - 605 describes an additional item, repeat as desired.
p itemType shop_item_type
P 0 thing int
v 0 item item_id
v 1 weapon weapon_id
v 2 armour armour_id
p itemPriceEx int_boolean
P 2 priceEx int
v 0 _ int
p purchaseOnly boolean
C groupBehavior messagebox 605

605: "Additional Shop Item"
d An additional shop item.
p itemType shop_item_type
P 0 thing int
v 0 item item_id
v 1 weapon weapon_id
v 2 armour armour_id
p itemPriceEx int_boolean
P 2 priceEx int
v 0 _ int

303: "Input Name For Actor" ($ " " ]0 actor_id)
d Let the user give a party member a name. (Warning: There are no filters.)
p actor actor_id
p maxLetters int

311:@@Actor{A: [@iterate_actor_var] HP += [@operate_value_2]| HP +=...}
d Heal or harm a party member.
p actorIsVar int_boolean
P 0 actorVar var_id
v 0 actor iterate_actor_id
p negateMod int_boolean
p modIsVar int_boolean
P 3 modVar var_id
v 0 mod int_default_100
p canKill boolean

312:@@Actor{A: [@iterate_actor_var] MP += [@operate_value_2]| MP +=...}
d Heal or harm a party member's magical talents.
p actorIsVar int_boolean
P 0 actorVar var_id
v 0 actor iterate_actor_id
p negateMod int_boolean
p modIsVar int_boolean
P 3 modVar var_id
v 0 mod int_default_10

313:@@{A:{C=0=Add|Remove}|Change} State{A: @[state_id]D} on actor{A: [@iterate_actor_var]}
d Heal or harm a party member by giving them a state.
p actorIsVar int_boolean
P 0 actorVar var_id
v 0 actor iterate_actor_id
p remove int_boolean
p state state_id

314:@@Full recover on actor{A: [@iterate_actor_var]}
d Heal a party member to full health.
p actorIsVar int_boolean
P 0 actorVar var_id
v 0 actor iterate_actor_id

315:@@EXP of actor{A: [@iterate_actor_var] += [@operate_value_2]}
d Give a party member free EXP!
p actorIsVar int_boolean
P 0 actorVar var_id
v 0 actor iterate_actor_id
p negateMod int_boolean
p modIsVar int_boolean
P 3 modVar var_id
v 0 mod int_default_100
p showLevelUp boolean

316:@@LVL of actor{A: [@iterate_actor_var] += [@operate_value_2]}
d Give a party member free levels!
p actorIsVar int_boolean
P 0 actorVar var_id
v 0 actor iterate_actor_id
p negateMod int_boolean
p modIsVar int_boolean
P 3 modVar var_id
v 0 mod int_default_1
p showLevelUp boolean

317:@@Modify parameter{C: @[parameter_id]C} in actor{A: [@iterate_actor_var] by [@operate_value_3]}
d Modify a party member in confusing battle-related ways.
p actorIsVar int_boolean
P 0 actorVar var_id
v 0 actor iterate_actor_id
p paramIdx parameter_id
p negateMod int_boolean
p modIsVar int_boolean
P 4 modVar var_id
v 0 mod int_default_10

318:@@{A:{C=0=Add|Remove}|Change} Skill{A: @[skill_id]D} on actor{A: [@iterate_actor_var]}
d Add or remove a skill from/to a party member.
p actorIsVar int_boolean
P 0 actorVar var_id
v 0 actor iterate_actor_id
p remove int_boolean
p skill skill_id

319:"Change Equipment on actor" ($ " " ]0 actor_id)
d Change what a party member has equipped. Note that one of the slots can vary between weapon and armour, so you will have to enter the ID manually.
p actor actor_id
p slot equipment_slot
p weaponId|armourId equipment_id

320:"Rename Actor" ($ " " ]0 actor_id) ($ " to " ]1)
d Rename a party member in a way the player can't abuse.
C translatable
p actor actor_id
p name string

321:"Change Actor" ($ " " ]0 actor_id) " Class" ($ " to " ]1 class_id)
d Change a party member's class.
p actor actor_id
p class class_id

322: "Change Actor" ($ " " ]0 actor_id) " Sprites"
d Change the sprites used by a party member.
p actor actor_id
p charName f_char_name
C spritesheet 1 Characters/
p charIdx int
p faceName f_face_name
C spritesheet 3 Faces/
p faceIdx int

323: "Change Vehicle" ($ " " ]0 vehicle_id) " Graphic"
d Change the sprites used by a vehicle.
p vehicle vehicle_id
p charName f_char_name
C spritesheet 1 Characters/
p charIdx int

324: "Change" ($ " " ]0 actor_id) " Nickname" ($ " to " ]1)
d Change the nickname of a party member. Why they have nicknames, I do not know...
C translatable
p actor actor_id
p nickname string

331:@@HP of enemy{A: @[iterate_enemy_index]A += [@operate_value_1]}
d Heal or harm an enemy.
p enemy iterate_enemy_index
p negateMod int_boolean
p modIsVar int_boolean
P 2 modVar var_id
v 0 mod int_default_100
p canKill boolean

332:@@MP of enemy{A: @[iterate_enemy_index]A += [@operate_value_1]}
d Heal or harm an enemy's magical abilities.
p enemy iterate_enemy_index
p negateMod int_boolean
p modIsVar int_boolean
P 2 modVar var_id
v 0 mod int_default_10

333:@@{A:{B=0=Add|Remove}|Change} enemy{A: @[iterate_enemy_index]A state @[state_id]C| state}
d Heal or harm an enemy by giving them a state.
p enemy iterate_enemy_index
p remove int_boolean
p state state_id

334: "Enemy" ($ " " ]0 iterate_enemy_index) " recovers all"
d Enemy recovers all health, MP, etc. (Note: Players may hate you if you use this.)
p enemy iterate_enemy_index

335: "Enemy" ($ " " ]0 iterate_enemy_index) " appears"
d Make a previously hidden enemy become unhidden.
p enemy iterate_enemy_index

336: @@{B:Enemy @[iterate_enemy_index]A transforms into @[enemy_id]B|Enemy transforms into...}
d Transforms an enemy into another enemy. TODO: Side effects?
p enemy iterate_enemy_index
p transform enemy_id

337: "Enemy" ($ " " ]0 iterate_enemy_index) " uses animation" ($ " " ]1 animation_id)
d Play an animation on the enemy, presumably before something bad happens to it or the player.
p enemy iterate_enemy_index
p animation animation_id

339: "Force Battle Action"
d Force something in the battle to do something. Not very specific.
p userIsEnemy int_boolean
P 0 userEnemy iterate_enemy_index
v 0 userActor iterate_actor_id
p skill skill_id
p target force_action_target

340: "Abort Battle"
d Simply refuse to let the battle continue.

351: "Open Menuscreen"
d Opens the menu screen.

352: "Open Savescreen"
d Opens the save screen.

353: "Game Over"
d Instantly causes a game over.

354: "Return to Title"
d Return to the title screen.

355: "Ruby>" ($ " " ]0)
d Run some Ruby.
p code string
C groupBehavior messagebox 655

655: "Ruby." ($ " " ]0)
d Continuation of embedded Ruby.
p code string

 Completion Notes: COMPLETE (I think)
