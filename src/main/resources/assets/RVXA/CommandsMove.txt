
 * This is released into the public domain.
 * No warranty is provided, implied or otherwise.

 Movement commands for VX Ace.

0: Terminate
d Do I really need to describe this?
L

1: Move South
d Walk, or maybe glide, in the direction clearly stated.
2: Move West
d Walk, or maybe glide, in the direction clearly stated.
3: Move East
d Walk, or maybe glide, in the direction clearly stated.
4: Move North
d Walk, or maybe glide, in the direction clearly stated.

5: Move S-W
d Walk, or maybe glide, in the direction clearly stated.
6: Move S-E
d Walk, or maybe glide, in the direction clearly stated.
7: Move N-W
d Walk, or maybe glide, in the direction clearly stated.
8: Move N-E
d Walk, or maybe glide, in the direction clearly stated.

9: Move Randomly
d Walk, or maybe glide, in a random direction.

10: Move towards Player
d Walk, or maybe glide, in a direction that's more or less player-oriented.

11: Move away from Player
d Walk, or maybe glide, in a direction that's more or less NOT player-oriented.

12: 1 Step forward
d Walk, or maybe glide, forward.

13: 1 Step back
d Walk, or maybe glide, backward.

14: Jump relatively!$
d Jump somewhere. Gliding is boring.
p xOfs int
p yOfs int

15: Wait$ frames
d Wait a while, let everything synchronize.
p frames int

16: Turn South
d Turn to the direction indicated.
17: Turn West
d Turn to the direction indicated.
18: Turn East
d Turn to the direction indicated.
19: Turn North
d Turn to the direction indicated.

20: Turn clockwise 90d (Right)
d Turn in the direction indicated.
21: Turn anticlockwise 90d (Left)
d Turn in the direction indicated.

22: Turn 180d (Opposite direction)
d Turn in the direction indicated.

23: Turn either left or right (random)
d Turn in one direction or another, randomly.
24: Turn to any direction (random)
d Turn to a cardinal direction, randomly.
25: Turn towards player
d Turn to face the player.
26: Turn away from player
d Turn to avoid facing the player.

27: Enable switch$
d Enable a switch. In a MoveRoute. This makes sense.
p switch switch_id

28: Disable switch$
d Disable a switch. In a MoveRoute. This makes sense.
p switch switch_id

29: Set speed!
d Change move speed.
p speed int

30: Set frequency!
d Change move frequency.
p frequency int

31: Enable walk animation
d ...
32: Disable walk animation
d ...
33: Enable step animation
d ...
34: Disable step animation
d ...
35: Enable fixed direction
d ...
36: Disable fixed direction
d ...

37: Disable collision
d ...
38: Enable collision
d ...
39: Enable transparency
d I would assume *translucency* is the correct*GACK!*
40: Disable transparency
d ...

41: Set graphic!$
d Change the sprites of the character.
p characterName f_char_name
C spritesheet 0 Characters/
p characterIndex int

42: Change Opacity!
d Change the opacity of the character.
p opacity opacity

43: Change BlendType
d Change the blend type (how translucency interacts with the environment) of the character.
p blendType blend_type

44: Play SE$
d Play a sound effect.
p se RPG::SE

45: Ruby$
d Run Ruby. In a MoveRoute. Okay. I'm done. This is the end of the file, actually, so...
p script string