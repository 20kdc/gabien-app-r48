
 * This is released into the public domain.
 * No warranty is provided, implied or otherwise.

A R2K/AutoTiles.txt R2KXPCOM/AutoTileRules.txt R2K/WaterATs.txt R2K/WaterATRules.txt

D internal_mapDictionary RPG_RT.lmt@map_infos 1 @name
D internal_eventDictionary __MAP__@events 1 @name

d internal_variableDictionary RPG_RT.ldb @variables
d internal_switchDictionary RPG_RT.ldb @switches

D internal_tilesetDictionary RPG_RT.ldb@tilesets 1 @name
D internal_terrainDictionary RPG_RT.ldb@terrains 1 @name
D internal_itemDictionary RPG_RT.ldb@items 1 @name
D internal_skillDictionary RPG_RT.ldb@skills 1 @name
D internal_stateDictionary RPG_RT.ldb@states 1 @name
D internal_cevDictionary RPG_RT.ldb@common_events 1 @name
D internal_classDictionary RPG_RT.ldb@classes_2k3 1 @name
D internal_animDictionary RPG_RT.ldb@animations 1 @name
D internal_enemyDictionary RPG_RT.ldb@enemies 1 @name

D internal_actorDictionary RPG_RT.ldb@actors 1 @name
D internal_attributeDictionary RPG_RT.ldb@attributes 1 @name
D internal_battleanimationDictionary RPG_RT.ldb@battle_anim_sets_2k3 1 @name

D internal_battlecommandDictionary RPG_RT.ldb@battle_commands_2k3@commands 0 @name

> f_charset_name { string fileSelector CharSet/ }
> f_faceset_name { string fileSelector FaceSet/ }
> f_music_name { string= (OFF) fileSelector Music/ }
> f_sound_name { string= (OFF) fileSelector Sound/ }
> f_system_name { string= System fileSelector System/ }
 This used to default to 'system2a', but that causes issues on RPG_RT unless you *have* a system2a handy.
 Not that you should be synthing against RPG_RT, but compatibility is king
> f_system2_name { string fileSelector System2/ }
> f_parallax_name { string fileSelector Panorama/ }
> f_movie_name { string fileSelector Movie/ }
> f_battleback_name { string fileSelector Backdrop/ }
> f_monster_name { string fileSelector Monster/ }

> var_id internal_variableDictionary
> switch_id internal_switchDictionary

> item_id internal_itemDictionary
E item_or_none_id__ Item.ID 0 None
M internal_itemDictionary item_or_none_id__ item_or_none_id

> skill_id internal_skillDictionary
> state_id internal_stateDictionary
> map_id internal_mapDictionary
> troop_id int
 not to be confused with an enemy within a troop
> enemy_id internal_enemyDictionary
> tileset_id internal_tilesetDictionary
> terrain_id internal_terrainDictionary

> actor_id internal_actorDictionary
> attribute_id internal_attributeDictionary

 If you even see any of these mentioned at all, it is 2k3 only. *Always*.
> battleranimation_id internal_battleanimationDictionary

> animation_id internal_animDictionary
E animation_or_none_id__ Anim.ID 0 None
M internal_animDictionary animation_or_none_id__ animation_or_none_id

> class_id internal_classDictionary
E class_or_none_id__ Class.ID 0 None
M internal_classDictionary class_or_none_id__ class_or_none_id

> battlecommand_id internal_battlecommandDictionary
E battlecommand_or_none_id__ BC.ID 0 None
M internal_battlecommandDictionary battlecommand_or_none_id__ battlecommand_or_none_id

> commonevent_id internal_cevDictionary
E commonevent_or_none_id__ CEV.ID 0 None
M internal_cevDictionary commonevent_or_none_id__ commonevent_or_none_id

E character_id_base EventID 10001 player 10002 boat 10003 ship 10004 airShip 10005 runningEvent
M internal_eventDictionary character_id_base character_id

e timer_id 0 timer1 1 timer2

 NOTE: This is barely ever used, in contrast to RGSS. In general stuff uses sprite_direction
e direction 2 down 4 left 6 right 8 up

e sprite_direction 0 up 1 right 2 down 3 left

i R2K/SchemaScripting.txt

: Rect
@left int
@up int
@right int
@down int

: RPG::Music
@name f_music_name
@fadeTime int
@volume int= 100
@tempo int= 100
@balance int= 50

: RPG::Sound
@name f_sound_name
@volume int= 100
@tempo int= 100
@balance int= 50
