
 * This is released into the public domain.
 * No warranty is provided, implied or otherwise.

 The R2k Command List.
 Highly incomplete.
 Stuff marked with EXX is actually not in G.I, but hasn't been moved yet.

 AS THIS IS R2K, THE p _ string PARAMETER (or something like it for stuff that does have text) MUST ALWAYS EXIST!
 Even for X-codes!
 Yes, the system *should* recover via LcfEventCommandEditor_Most if you screw up.
 You shouldn't be relying on it.

C digitCount 5

0: >> insert point
d A placeholder that allows for insertion.
p _ string
L

10: >> E.O.B. insert point
d A placeholder that allows for insertion.
p _ string
Lblock

10110: Say$
d Begins a message to show to the player.
p text string

20110: Say (cont.)$
d Continues a 10110 'Say'.
p text string

10140: @@Show Choices{B: {B=0=no cancel|cancel choice: #B}} (20140/20141 follows)
d Shows a set of choices to the player. (editorChoices is for editor display purposes only.)
p editorChoices string
p 0|cancelChoice+1 int
I1

20140: ... Choice:$
d A choice. If the player selects this choice, the code between this and the next choice runs.
p text string
i-1
I1

20141: ... End Choices
d The end of a set of choices.
p _ string
i-1
l

10150: @@Input Number{C: to var. @#C (#B digits)}
d Shows a numeric input to the player, with a set amount of digits, and stores the result in a variable.
p _ string
p digits int
p var var_id

10120: @@Message Options{E: {B=0=opaque|transparent},#C,{D=0=fixed|unfixed},events{E=0= don't} continue}
d Sets if the text box is transparent, where it is, if it will move to avoid hiding the player, and if events can move about (I think).
p _ string
p transparent int_boolean
p position message_options_position
p positionLocked int_boolean
p continueEvents int_boolean

10130: @@Change Face{D: to #A:#B, {C=0=left|right} {D=0=|, flipped}}
d Change the face in the text box to a given face, including some details.
p faceImage string
p faceIndex int
p faceAtRight int_boolean
p faceFlipped int_boolean

 Control Switches follows. Uhoh.

10210: @@Control Switch{E:{B=1=es @#C through @#D| @#C} = #E|es}
d Control switches in various ways. Single alters one switch. Range alters a group of switches. Indirect alters one switch, numbered by a variable.
p _ string
p type control_switches_type
D target|Sw.|Var 1 int 0 switch_id 1 switch_id 2 var_id
p rangeLast switch_id
p changeMode control_switches_change_mode

10220: Set Variables
d Modify a variable or range of variables in various ways dependent on a given value.
p _ string
X set_variables_parameters

10230: Timer Operation
d Alters the settings on either timer ID 0 (if unspecified) or a given timer. Can set the timer, change it's visibility + if it counts in bettle, or stop it.
p _ string
X timer_operation_parameters

10310: @@{B:{B=0=Give|Take From}|Give/Take From} Player:{D: {C=0=#D|Var(@[var_id]D)}} Gold
d Adds or removes gold by a constant amount or the value in a variable.
p _ string
p takeGold int_boolean
p goldIsVar int_boolean
D gold|Int|Var 2 var_id 0 int

10320: Modify Items
d Adds or removes the amount of an item (selected by ID or the value in a variable) by a constant amount or the value in a variable.
p _ string
p remove int_boolean
p itemIsVar int_boolean
D item|Item|Var 2 var_id 0 item_id
p countIsVar int_boolean
D count|Int|Var 4 var_id 0 int

10330: Change Party Member
d Adds or removes a party member, selected by ID or the value in a variable.
p _ string
p remove int_boolean
p actorIsVar int_boolean
D actor|ActorID|Var 4 var_id 0 actor_id

10410: Change EXP
d Modifies the amount of experience a given set of party members has.
p _ string
p targetMode get_actors_mode
D target|ActorID|Var 1 int 2 var_id

p removeExp int_boolean
p expIsVar int_boolean
D exp|Int|Var 4 var_id 0 int

d showLvlUp int_boolean

10420: Change Exp.Level
d Modifies the levels a given set of party members have.
p _ string
p targetMode get_actors_mode
D target|ActorID|Var 1 int 2 var_id

p removeLvl int_boolean
p lvlIsVar int_boolean
D lvl|Int|Var 4 var_id 0 int

d showLvlUp int_boolean

10430: Change Battle Parameters
d Modifies the parameters a given set of party members have.
p _ string
p targetMode get_actors_mode
D target|ActorID|Var 1 int 2 var_id

p removePL int_boolean
p targetParam change_battle_parameter
p plIsVar int_boolean
D pl|Int|Var 5 var_id 0 int

10440: Change Skills
d Adds or removes skills a given set of party members have.
p _ string
p targetMode get_actors_mode
D target|ActorID|Var 1 int 2 var_id
p removeSkill int_boolean
p skillIsVar int_boolean
D skill|SkillID|Var 4 var_id 0 skill_id

 GAP

11330: @@Move Event{B: @#B}
d Sends a list of MoveCommands to an event.
p _ string
X move_event_parameters

 GAP

11510: Play BGM$
d Plays some background music.
p music string
p fadeTime int
p volume int
p tempo int
p balance int

 GAP

11550: Play Sound$
d Plays a sound effect.
p sound string
p volume int
p tempo int
p balance int

12310: End Event Processing
d Jump to the end of the code, thus, stop running it.
p _ string

12410: //* $
d A comment.
p text string

22410: //. $
d A continuation of a comment.
p text string

12420: Game Over
d Show the game over screen, and such.
p _ string

 GAP

12010: Conditional Branch
d Runs the following code if a condition is true. Otherwise, runs the code at the Else Branch inside, or if one does not exist, goes to the end of the branch.
p _ string
X cbranch_parameters
I1

22010: Else Branch
d Indicates that if the containing branch was false, the following code should be executed. (Otherwise, the previous code will be executed, and this will not.)
p _ string
i-1
I1
l

22011: End Branch
d Indicates the end of a conditional branch.
p _ string
i-1
l

12110: @@Label #B
d A label. See JumpToLabel.
p _ string
p labelId int

12120: @@Jump To Label #B
d Jump to a label.
p _ string
p labelId int

12210: Start Loop
d Begins a loop, which will run forever unless broken.
p _ string
I1

12210: Break Loop
d Leaves the loop.
p _ string

22210: End Loop
d Indicates the end of a loop - will go back to the start.
p _ string
i-1
l

12320: Temp. Erase This Event
d Attempts to temporarily erase this event (if this is, in fact, a map event)
p _ string

 GAP

 EXX

10810: @@Teleport Player{D: to @#B : @#C, @#D}
d Teleports the player to a given map and position.
p _ string
p map map_id
p x int
p y int
