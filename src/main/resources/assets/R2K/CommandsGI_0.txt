
 * This is released into the public domain.
 * No warranty is provided, implied or otherwise.

 The R2k Command List.
 Highly incomplete.

 AS THIS IS R2K, THE p _ string PARAMETER (or something like it for stuff that does have text) MUST ALWAYS EXIST!
 Even for X-codes!
 Yes, the system *should* recover via LcfEventCommandEditor_Most if you screw up.
 You shouldn't be relying on it.

C digitCount 5

0: >> insert point
d A placeholder that allows for insertion.
p _ string
L

10: >> E.O.B. insert point
d A placeholder that allows for insertion.
p _ string
Lblock

10110: Say$
d Begins a message to show to the player.
p text string

20110: Say (cont.)$
d Continues a 10110 'Say'.
p text string

10140: @@Show Choices{B: {B=0=no cancel|cancel choice: #B}} (20140/20141 follows)
d Shows a set of choices to the player. (editorChoices is for editor display purposes only.)
p editorChoices string
p 0|cancelChoice+1 int
I1

20140: ... Choice:$
d A choice. If the player selects this choice, the code between this and the next choice runs.
p text string
i-1
I1

20141: ... End Choices
d The end of a set of choices.
p _ string
i-1
l

10150: @@Input Number{C: to var. @#C (#B digits)}
d Shows a numeric input to the player, with a set amount of digits, and stores the result in a variable.
p _ string
p digits int
p var var_id

10120: @@Message Options{E: {B=0=opaque|transparent},#C,{D=0=fixed|unfixed},events{E=0= don't} continue}
d Sets if the text box is transparent, where it is, if it will move to avoid hiding the player, and if events can move about (I think).
p _ string
p transparent int_boolean
p position message_options_position
p positionLocked int_boolean
p continueEvents int_boolean

10130: @@Change Face{D: to #A:#B, {C=0=left|right} {D=0=|, flipped}}
d Change the face in the text box to a given face, including some details.
p faceImage string
p faceIndex int
p faceAtRight int_boolean
p faceFlipped int_boolean

 Control Switches follows. Uhoh.

10210: @@Control Switch{E:{B=1=es @#C through @#D| @#C} = #E|es}
d Control switches in various ways. Single alters one switch. Range alters a group of switches. Indirect alters one switch, numbered by a variable.
p _ string
p type control_switches_type
P 1 target? int
v 0 target switch_id
v 1 rangeFirst switch_id
v 2 targIndVar var_id

p rangeLast switch_id
p changeMode control_switches_change_mode

10220: Set Variables
d Modify a variable or range of variables in various ways dependent on a given value.
p _ string
X set_variables_parameters

10230: Timer Operation
d Alters the settings on either timer ID 0 (if unspecified) or a given timer. Can set the timer, change it's visibility + if it counts in bettle, or stop it.
p _ string
X timer_operation_parameters

10310: @@{B:{B=0=Give|Take From}|Give/Take From} Player:{D: {C=0=#D|Var(@[var_id]D)}} Gold
d Adds or removes gold by a constant amount or the value in a variable.
p _ string
p takeGold int_boolean
p goldIsVar int_boolean
P 2 goldVar var_id
v 0 gold int

10320: Modify Items
d Adds or removes the amount of an item (selected by ID or the value in a variable) by a constant amount or the value in a variable.
p _ string
p remove int_boolean
p itemIsVar int_boolean
P 2 itemVar var_id
v 0 item item_id
p countIsVar int_boolean
P 4 countVar var_id
v 0 count int

10330: Change Party Member
d Adds or removes a party member, selected by ID or the value in a variable.
p _ string
p remove int_boolean
p actorIsVar int_boolean
P 2 actorVar var_id
v 0 actor actor_id

10410: Change EXP
d Modifies the amount of experience a given set of party members has.
p _ string
p targetMode get_actors_mode
P 1 _ int
v 1 target actor_id
v 2 targetVar var_id

p removeExp int_boolean
p expIsVar int_boolean
P 4 expVar var_id
v 0 exp int

d showLvlUp int_boolean

10420: Change Exp.Level
d Modifies the levels a given set of party members have.
p _ string
p targetMode get_actors_mode
P 1 _ int
v 1 target actor_id
v 2 targetVar var_id

p removeLvl int_boolean
p lvlIsVar int_boolean
P 4 lvlVar var_id
v 0 lvl int

d showLvlUp int_boolean

10430: Change Battle Parameters
d Modifies the parameters a given set of party members have.
p _ string
p targetMode get_actors_mode
P 1 _ int
v 1 target actor_id
v 2 targetVar var_id

p removePL int_boolean
p targetParam change_battle_parameter
p plIsVar int_boolean
P 5 plVar var_id
v 0 pl int

10440: Change Skills
d Adds or removes skills a given set of party members have.
p _ string
p targetMode get_actors_mode
P 1 _ int
v 1 target actor_id
v 2 targetVar var_id

p removeSkill int_boolean
p skillIsVar int_boolean
P 4 skillVar var_id
v 0 skill skill_id

10450: Change Equipment
d Equips a given piece of equipment to, or unequips all equipment from a given set of party members
p _ string
X change_equipment_parameters

10460: Change HP
d Heals or hurts a given set of party members. Can trigger Game Over if allowed to.
p _ string
p targetMode get_actors_mode
P 1 _ int
v 1 target actor_id
v 2 targetVar var_id

 would be 'negate' but this is more obvious
p hurtTarget int_boolean
p amountIsVar int_boolean
P 4 amountVar var_id
v 0 amount int

p allowDeath int_boolean

10470: Change SP
d Gives or takes SP from a given set of party members.
p _ string
p targetMode get_actors_mode
P 1 _ int
v 1 target actor_id
v 2 targetVar var_id

p takeSp int_boolean
p amountIsVar int_boolean
P 4 amountVar var_id
v 0 amount int

10480: Add/Remove State
d Adds to or removes a State from a given set of party members.
p _ string
p targetMode get_actors_mode
P 1 _ int
v 1 target actor_id
v 2 targetVar var_id

p remove int_boolean
p state state_id

10490: Full Heal + Recharge
d Fills HP and SP to maximum possible for a given set of party members.
p _ string
p targetMode get_actors_mode
P 1 _ int
v 1 target actor_id
v 2 targetVar var_id

10500: Simulate Attack
 On Titan
d Causes an attack of damage atk - (((actor.def * defMod) / 400) + ((actor.spi * spiMod) / 800)), with the result being varied by *up to, in either direction* (variance * 5) / 100.
p _ string
p targetMode get_actors_mode
P 1 _ int
v 1 target actor_id
v 2 targetVar var_id

p atk int
p defMod int
p spiMod int
p variance int
p storeResultDamage int_boolean
p resultDamageVar var_id

 The logic here is madness. The command name code is, to my knowledge, a precise description.
11410: @@Wait {C:{B=0=For Action|For #B Frames}|For Action}
d Wait a given number of frames or until the ACT key is pressed.
p _ string
X wait_illogical_parameters

11510: Play BGM$
d Plays some background music.
p music string
p fadeTime int
p volume int
p tempo int
p balance int

11520: Fade Out BGM
d Fades out the background music.
p _ string
p fadeTime int

11550: Play Sound$
d Plays a sound effect.
p sound string
p volume int
p tempo int
p balance int

12310: End Event Processing
d Jump to the end of the code, thus, stop running it.
p _ string

12410: //* $
d A comment.
p text string

22410: //. $
d A continuation of a comment.
p text string

12420: Game Over
d Show the game over screen, and such.
p _ string

10610: @@{B:Change @[actor_id]B's Name: #A|Change Actor Name}
d Change the name of a party member.
p name string
p actor actor_id

10620: @@{B:Change @[actor_id]B's Title: #A|Change Actor Title}
d Change the title of a party member.
p title string
p actor actor_id

10630: Change Actor G/I/T
d Change how a party member appears in battle.
p graphic string
p actor actor_id
p index int
p transparent int_boolean

10640: @@{B:Change @[actor_id]B's Face: #A:#C|Change Actor Face}
d Change the face of a party member.
p faceset string
p actor actor_id
p index int

10650: Change Vehicle Appearance
d Change the appearance of a vehicle.
p graphic string
p vehicle scripting_vehicletype
p index int

10660: Change System BGM
d Change a System BGM.
p bgm string
p bgmId change_sys_bgm_id
p fadein int
p volume int
p tempo int
p balance int

 NT. OS uses below for hax, so it gets priority on the "should we name this right today" roulette wheel

10670: @@Change Sys.SFX{E: @#B to #A}
d Change a sound effect used by the system.
p sfx string
p sfxId change_sys_sfx_id
p volume int
p tempo int
p balance int

10680: Change Sys.GFX
d Change the current set of graphics used by the system.
p systemGfx string
p useTiling int_boolean
p font change_sys_gfx_font

10690: Change Transition
d Change a transition used by the system.
p _ string
p situation change_transition_situation
p transition change_transition_type

 GAP (M.L to S.E.I)

11010: Hide Map
d Hides the map.
p _ string
p transition transition_type

11020: Show Map
d Shows the map.
p _ string
p transition transition_type

11030: Tint Screen
d Tints the screen with given parameters.
p _ string
p red int
p green int
p blue int
p rotation int
p fadeTime int
p waitForFade int_boolean

 GAP (F.S to S.S)

11070: Weather Control
d Controls the weather. Your forecast today: Rain. Which is good, because the clouds will protect you from the burning, uncaring sun.
p _ string
p weather weather_control_type
p strength weather_control_strength

11310: @@{B:{B=1=Show Player|Hide Player}|Change Player Visibility}
d Show or hide the player on the map.
p _ string
p visible int_boolean

11330: @@Move Event{B: @#B}
d Sends a list of MoveCommands to an event.
p _ string
X move_event_parameters

 GAP (M.BGM to C.M.M.A)

12010: Conditional Branch
d Runs the following code if a condition is true. Otherwise, runs the code at the Else Branch inside, or if one does not exist, goes to the end of the branch.
p _ string
X cbranch_parameters
I1

22010: Else Branch
d Indicates that if the containing branch was false, the following code should be executed. (Otherwise, the previous code will be executed, and this will not.)
p _ string
i-1
I1
l

22011: End Branch
d Indicates the end of a conditional branch.
p _ string
i-1
l

12110: @@Label #B
d A label. See JumpToLabel.
p _ string
p labelId int

12120: @@Jump To Label #B
d Jump to a label.
p _ string
p labelId int

12210: Start Loop
d Begins a loop, which will run forever unless broken.
p _ string
I1

12210: Break Loop
d Leaves the loop.
p _ string

22210: End Loop
d Indicates the end of a loop - will go back to the start.
p _ string
i-1
l

12320: Temp. Erase This Event
d Attempts to temporarily erase this event (if this is, in fact, a map event)
p _ string

 GAP (C.E to C.B.C)

5002: Shutdown RPG_RT
d Goodnight.
p _ string

5004: Toggle Fullscreen
d Allows you to fry the player's graphics card.
p _ string
