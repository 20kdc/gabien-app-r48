
 * This is released into the public domain.
 * No warranty is provided, implied or otherwise.

 -- bits and bobs

e control_switches_type 0 single 1 range 2 indirect
e control_switches_change_mode 0 on 1 off 2 toggle

e message_options_position 0 top 1 centre 2 bottom

e get_actors_mode 0 wholeParty(ign.target) 1 actor 2 varActor

e change_battle_parameter 0 maxHP 1 maxMP 2 atk 3 def 4 spi 5 agi

e scripting_vehicletype 0 boat 1 ship 2 airShip

e change_sys_bgm_id 0 battle 1 victory 2 inn 3 boat 4 ship 5 airShip 6 gameOver
e change_sys_sfx_id 0 cursor 1 act 2 cancel 3 buzzer 4 battle 5 escape 6 enemyAttack 7 enemyHurt 8 actorHurt 9 dodge 10 enemyDeath 11 item
e change_sys_gfx_font 0 msGothic 1 msMincho

e change_transition_situation 0 mapChangePre 1 mapChangePost 2 enterBattlePre 3 enterBattlePost 4 leaveBattlePre 5 leaveBattlePost
 also used by LDBSystem, need to figure out a better place for this
e change_transition_type 0 default 1 fade 2 blocks 3 dwDown 4 dwUp 5 blindsA 6 blindsB 7 blindsC 8 scalingSquareI 9 scalingSquareO 10 moveScrUpDown 11 moveScrDownUp 12 moveScrLeftRight 13 moveScrRightLeft 14 verticalOverlap 15 horizontalOverlap 16 quads 17 zoom 18 pieces 19 haze 20 null 21 none
e transition_type -1 default 0 fade 1 blocks 2 dwDown 3 dwUp 4 blindsA 5 blindsB 6 blindsC 7 scalingSquareI 8 scalingSquareO 9 moveScrUpDown 10 moveScrDownUp 11 moveScrLeftRight 12 moveScrRightLeft 13 verticalOverlap 14 horizontalOverlap 15 quads 16 zoom 17 pieces 18 haze 19 null 20 none

 (Pretty sure fog and sandstorm are 2k3, anyway)
e weather_control_type 0 none 1 rain 2 snow 3 fog2k3 4 sandstorm2k3
e weather_control_strength 0 little 1 medium 2 lots

e callevent_type 0 commonEvent 1 mapEvent 2 indirectMapEvent

e change_actor_class_skillfx 0 noChange 1 replaceSkills 2 addSkills
e change_actor_class_statsfx 0 noChange 1 halfStats 2 lvl1Stats 3 currentLevelStats

e camera_pan_control_mode 0 lockCamera 1 unlockCamera 2 linearMoveCamera 3 linearFocusOnPlayer

e forceescape_mode 0 escape 1 instaKillEnemiesAndWin 2 instaKillSingleEnemyAndWin
e change_enemy_hp_mode 0 direct 1 variable 2 currentHp%

 BEFORE ADDING A "mysteriously set to 1" type for a parameter just before an actor_id,
  have you considered it could be GetActors? - 20kdc to themselves
 ...of course, if it has no relation...
> int_default_1 int= 1
> int_default_50 int= 50
> int_default_100 int= 100

 ---

i R2K/SchemaScriptingMonolith.txt
i R2K/SchemaScriptingMonolith2.txt
i R2K/SchemaScriptingMonolith3.txt

 ---

 Now for an explaination.
 EventCommandEditor is a full schema element which acts as RPG::EventCommand.
 EventCommandEditor_Most is what the user will see if no command is defined.
 RPG::EventCommand is the *conveniently completely invisible* schema being used for modifyVal.
 Which means it can do whatever it likes, including, say, slight misuse of a 1-based indexer.
 arrayIx1 DOES NOT CARE about element 0, outside of making it nil if it would otherwise be a VM-incompatible value (Actual Java NULL).
 Next, ]0 text string will reinitialize it and make sure the first is a string.
 arrayIx1 will ensure the rest are all ints.
 Thus, it should be impossible to generate unserializable data.
 ...Meanwhile, EventCommandEditor_Most gets it the other way around, since it's for user display, so text should be at the top.
 (Or something. Hang on. Fixing stuff R/N. This added later. I've unified the display/nondisplay EventCommandParams.
  Advice: HAVE A DEBUGGER HANDY IF YOU ARE WRITING SCHEMA STUFF AND GET A ARRAYELEMENTSCHEMAELEMENT ERROR!!!!)

> genericScriptParameter int

 -Event Commands-

 Technically the arrayDAM isn't needed,
  but it's SUPPOSED to be there to ensure array parent stuff is all in order.
 (Ok, fixed, now it's needed. Allowing inconsistency causes inconsistency causes bugs.)
 (Ok, so it turns out inconsistency wasn't really a factor, and it was just a stupid mess going back to RPGCommandSchemaElement's original implementation.
  Long story short, arrayDAM isn't needed, and if you feel like lastArray should be brought back, try moving the logic into the array class.
  Suddenly, you'll question why on earth you decided lastArray might be a good idea, and think about all the complexity it brought LAST TIME.
  This being a message to myself, in case I ever decide to bring it back.)

.EventCommandParams
]0 text string
+arrayIx1 genericScriptParameter

: RPG::EventCommand
@code int= 12310
@indent int
@parameters EventCommandParams
+optIV @move_commands MoveListEditor

.EventCommandEditor_Most
@indent indent
@parameters EventCommandParams
+optIV @move_commands MoveListEditor

> EventListEditor subwindow arrayCS RPG::EventCommand EventCommandEditor_Most R2K/Commands.txt

 Use the Command Buffer syntax to fix this mess.
 Note that this introduces new and interesting problems, but I claim it's worth it,
  as movecommand_code is used elsewhere(!)

 -Move Commands-

 Used by the move commands to avoid tons of redundant paramspecs

.movecommand_default_nothing
@parameters { ]0 _ string ]1 _ int ]2 _ int ]3 _ int }

: RPG::MoveCommand
@code int
@parameters { ]0 _ string ]1 _ int ]2 _ int ]3 _ int }

> MoveListEditor subwindow[ Route... ] arrayMS RPG::MoveCommand movecommand_default_nothing R2K/CommandsMove.txt
