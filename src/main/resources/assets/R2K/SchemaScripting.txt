
 * This is released into the public domain.
 * No warranty is provided, implied or otherwise.

 -- bits and bobs

e control_switches_type 0 Single 1 Range 2 Indirect
e control_switches_change_mode 0 On 1 Off 2 Toggle

e message_options_position 0 Top 1 Centre 2 Bottom

 ---

i R2K/SchemaScriptingMonolith.txt

 ---

 Defining EventCommandEditor triggers RMTools, DO NOT DO THAT!
 Now for an explaination.
 LcfEventCommandEditor is a full schema element which acts as RPG::EventCommand.
 LcfEventCommandEditor_Most is what the user will see if no command is defined.
 RPG::EventCommand is the *conveniently completely invisible* schema being used for modifyVal.
 Which means it can do whatever it likes, including, say, slight misuse of a 1-based indexer.
 arrayIx1 DOES NOT CARE about element 0, outside of making it nil if it would otherwise be a VM-incompatible value (Actual Java NULL).
 Next, ]0 text string will reinitialize it and make sure the first is a string.
 arrayIx1 will ensure the rest are all ints.
 Thus, it should be impossible to generate unserializable data.
 ...Meanwhile, LcfEventCommandEditor_Most gets it the other way around, since it's for user display, so text should be at the top.
 (Or something. Hang on. Fixing stuff R/N. This added later. I've unified the display/nondisplay LcfEventCommandParams.
  Advice: HAVE A DEBUGGER HANDY IF YOU ARE WRITING SCHEMA STUFF AND GET A ARRAYELEMENTSCHEMAELEMENT ERROR!!!!)

> genericScriptParameter int

 Technically the arrayDAM isn't needed,
  but it's SUPPOSED to be there to ensure array parent stuff is all in order.
 (Ok, fixed, now it's needed. Allowing inconsistency causes inconsistency causes bugs.)

.LcfEventCommandParams
+arrayDAM -1 nil ]0 text string
+arrayIx1 genericScriptParameter

: RPG::EventCommand
@code int= 12310
@indent int
@parameters LcfEventCommandParams
+optIV @move_commands array 0 RPG::MoveCommand

.LcfEventCommandEditor_Most
@indent indent
@parameters LcfEventCommandParams
+optIV @move_commands array 0 RPG::MoveCommand

> EventListEditor subwindow arrayCS R2K/Commands.txt LcfEventCommandEditor
> LcfEventCommandEditor RPGCS R2K/Commands.txt RPG::EventCommand LcfEventCommandEditor_Most

 Use the Command Buffer syntax to fix this mess.
 Note that this introduces new and interesting problems, but I claim it's worth it,
  as movecommand_code is used elsewhere(!)

 Move Commands

.LcfMoveCommandEditor_Most
+arrayDAM -1 nil { ]0 _ string ]1 _ int ]2 _ int ]3 _ int }

C defaultCB
+arrayDAM -1 nil { ]0 text string ]1 A int ]2 B int ]3 C int }

0: Move North 1 Tile
+LcfMoveCommandEditor_Most
1: Move East 1 Tile
+LcfMoveCommandEditor_Most
2: Move South 1 Tile
+LcfMoveCommandEditor_Most
3: Move West 1 Tile
+LcfMoveCommandEditor_Most
4: Move North-East 1 Tile
+LcfMoveCommandEditor_Most
5: Move South-East 1 Tile
+LcfMoveCommandEditor_Most
6: Move South-West 1 Tile
+LcfMoveCommandEditor_Most
7: Move North-West 1 Tile
+LcfMoveCommandEditor_Most
8: Move Randomly 1 Tile
+LcfMoveCommandEditor_Most
9: Move Towards Player 1 Tile
+LcfMoveCommandEditor_Most
10: Move Away From Player 1 Tile
+LcfMoveCommandEditor_Most
11: Move Forward 1 Tile
+LcfMoveCommandEditor_Most
12: Face North
+LcfMoveCommandEditor_Most
13: Face East
+LcfMoveCommandEditor_Most
14: Face South
+LcfMoveCommandEditor_Most
15: Face West
+LcfMoveCommandEditor_Most
16: Turn Right
+LcfMoveCommandEditor_Most
17: Turn Left
+LcfMoveCommandEditor_Most
18: Turn To Opposite Direction
+LcfMoveCommandEditor_Most
19: Turn Left Or Right (random)
+LcfMoveCommandEditor_Most
20: Face Random Direction
+LcfMoveCommandEditor_Most
21: Face Player
+LcfMoveCommandEditor_Most
22: Face Away From Player
+LcfMoveCommandEditor_Most
23: Wait 20 Frames
+LcfMoveCommandEditor_Most
24: Begin Jump...
+LcfMoveCommandEditor_Most
25: End Jump
+LcfMoveCommandEditor_Most
26: Lock Faced Direction
+LcfMoveCommandEditor_Most
27: Unlock Faced Direction
+LcfMoveCommandEditor_Most
28: Speed Up (Speed)
+LcfMoveCommandEditor_Most
29: Slow Down (Speed)
+LcfMoveCommandEditor_Most
30: Speed Up (Freq.)
+LcfMoveCommandEditor_Most
31: Slow Down (Freq.)
+LcfMoveCommandEditor_Most
32: Switch On
+arrayDAM -1 nil { ]0 _ string ]1 switch switch_id ]2 _ int ]3 _ int }
33: Switch Off
+arrayDAM -1 nil { ]0 _ string ]1 switch switch_id ]2 _ int ]3 _ int }
34: Set Graphic
+arrayDAM -1 nil { ]0 graphic string ]1 index int ]2 _ int ]3 _ int }
35: Play Sound Effect
+arrayDAM -1 nil { ]0 file string ]1 volume int ]2 tempo int ]3 balance int }
36: Disable Collision
+LcfMoveCommandEditor_Most
37: Enable Collision
+LcfMoveCommandEditor_Most
38: Disable Animation
+LcfMoveCommandEditor_Most
39: Enable Animation
+LcfMoveCommandEditor_Most
40: Decrease Opacity
+LcfMoveCommandEditor_Most
41: Increase Opacity
+LcfMoveCommandEditor_Most

 ----

: RPG::MoveCommand
@code movecommand_code
+flushCommandBuffer @code movecommand_code

> MoveListEditor subwindow array 0 RPG::MoveCommand
