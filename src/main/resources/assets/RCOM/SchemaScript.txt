
 * This is released into the public domain.
 * No warranty is provided, implied or otherwise.

> genericScriptParameters array 0 genericScriptParameter
> genericScriptParametersSW subwindow genericScriptParameters

 Common enums which are always the same
e direction 2 down 4 left 6 right 8 up
e direction_disable 0 noChange 2 down 4 left 6 right 8 up

 Note: The default code is 115 so that when created,
        it won't be /immediately be zapped/ by the autocorrect.
       The default code can't be anything with parameters,
        since that autocorrect is on the array level,
        and the autocorrect *is not called on command interiors from the array.
       Furthermore, the parameters to this class,
        it being the schema used solely for creation and autocorrection,
        does not make any assumptions about the parameters.
       This prevents potential data loss due to overzealous autocorrect.
       genericScriptParameters could be incomplete, for example,
        and the autocorrect would happily wipe it over if that were used.
       So it's OPAQUE, unless a better solution
        (that doesn't have data-wiping potential) is put in.

: RPG::EventCommand
@code int= 115
@indent int
@parameters array 0 OPAQUE

.EventCommandEditor_Most
@indent indent
@parameters genericScriptParametersSW

: RPG::MoveCommand
@code int
@parameters array 0 OPAQUE

.MoveCommandEditor_Most
@parameters genericScriptParametersSW

 Stuff that doesn't go in CommonConditionals but would if it was just called "CommonCommandStuff"

C name transfer_player_paramassist2 ]4 ]5 | dir.[direction_disable]A, fade [transfer_player_fadetype]B
C name transfer_player_paramassist ]0 ]1 ]2 ]3 | Transfer player{A=1= by vars @[var_id]B#[@[var_id]C,@[var_id]D| to @[map_id]B#[[int]C,[int]D}] [@transfer_player_paramassist2]

 NOTE: The CMDB stuff for this is:
 999:@@{A:[@transfer_player_paramassist]|Transfer Player}
 p useVars int_boolean
 P 0 mapVar var_id
 v 0 map map_id
 P 0 xVar var_id
 v 0 x int
 P 0 yVar var_id
 v 0 y int
 p playerDir direction_disable
 p fadeType transfer_player_fadetype
 x transfer_player_paramassist

.transfer_player_paramassist
@indent indent
@parameters arrayDAM 0 int_boolean transfer_player_vars 0 transfer_player_novars

.transfer_player_vars
]0 targetVars int_boolean
]1 mapVar var_id
]2 xVar var_id
]3 yVar var_id
]4 playerDir direction_disable
]5 fadeType transfer_player_fadetype

.transfer_player_novars
]0 targetVars int_boolean
]1 mapVar map_id
]2 xVar int
]3 yVar int
]4 playerDir direction_disable
]5 fadeType transfer_player_fadetype
+mapPositionHelper ]1 ]2 ]3

 --

e set_event_location_type 0 ints 1 vars 2 swap

.set_event_location_header
 "And you don't seem to understand..."
]0 event character_id
]4 dir direction_disable
]1 selType set_event_location_type

.set_event_location_paramassist
C name set_event_location_paramassist2 ]1 ]2 ]3 | {A=0=loc.[int]B,[int]C}{A=1=loc.vars.@[var_id]B,@[var_id]C}{A=2=swap with @[character_id]B}
C name set_event_location_paramassist ]0 ]4 | Set ev.@[character_id]A to [@set_event_location_paramassist2], dir [direction_disable]B
@indent indent
@parameters arrayDAM 1 set_event_location_type set_event_location_header 0 set_event_location_a 1 set_event_location_b 2 set_event_location_c

.set_event_location_a
+set_event_location_header
]2 x int
]3 y int

.set_event_location_b
+set_event_location_header
]2 xVar var_id
]3 yVar var_id

.set_event_location_c
+set_event_location_header
]2 targ character_id

 --

 Now for operate_value stuff.
 Note that the string on the end (after |) should be the same

 This helps keep it maintainable-ish

C name operate_value_0 ]0 ]1 ]2 | {A=1=negate(}{B=1=v.@[var_id]C|[int]C}{A=1=)}
C name operate_value_1 ]1 ]2 ]3 | {A=1=negate(}{B=1=v.@[var_id]C|[int]C}{A=1=)}
C name operate_value_2 ]2 ]3 ]4 | {A=1=negate(}{B=1=v.@[var_id]C|[int]C}{A=1=)}
C name operate_value_3 ]3 ]4 ]5 | {A=1=negate(}{B=1=v.@[var_id]C|[int]C}{A=1=)}

 choice_array, used for choice formatting.
 Notably this is solely used as an interpretation.
C name Interp.choice_array ]0 ]1 ]2 | {A:[string]A{B:,[string]B{C:,[string]C}}}
